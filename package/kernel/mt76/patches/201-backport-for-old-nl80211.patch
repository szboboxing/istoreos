This patch just for compatible with old package/mac80211, should be deleted on package/mac80211 upgraded
Index: b/mt7915/init.c
===================================================================
--- a/mt7915/init.c
+++ b/mt7915/init.c
@@ -322,7 +322,6 @@ static void
 mt7915_init_wiphy(struct ieee80211_hw *hw)
 {
 	struct mt7915_phy *phy = mt7915_hw_phy(hw);
-	struct mt76_dev *mdev = &phy->dev->mt76;
 	struct wiphy *wiphy = hw->wiphy;
 	struct mt7915_dev *dev = phy->dev;
 
@@ -343,7 +342,6 @@ mt7915_init_wiphy(struct ieee80211_hw *h
 	wiphy->n_iface_combinations = ARRAY_SIZE(if_comb);
 	wiphy->reg_notifier = mt7915_regd_notifier;
 	wiphy->flags |= WIPHY_FLAG_HAS_CHANNEL_SWITCH;
-	wiphy->mbssid_max_interfaces = 16;
 
 	wiphy_ext_feature_set(wiphy, NL80211_EXT_FEATURE_BSS_COLOR);
 	wiphy_ext_feature_set(wiphy, NL80211_EXT_FEATURE_VHT_IBSS);
@@ -354,11 +352,6 @@ mt7915_init_wiphy(struct ieee80211_hw *h
 	wiphy_ext_feature_set(wiphy, NL80211_EXT_FEATURE_UNSOL_BCAST_PROBE_RESP);
 	wiphy_ext_feature_set(wiphy, NL80211_EXT_FEATURE_FILS_DISCOVERY);
 
-	if (!mdev->dev->of_node ||
-	    !of_property_read_bool(mdev->dev->of_node,
-				   "mediatek,disable-radar-background"))
-		wiphy_ext_feature_set(wiphy,
-				      NL80211_EXT_FEATURE_RADAR_BACKGROUND);
 
 	ieee80211_hw_set(hw, HAS_RATE_CONTROL);
 	ieee80211_hw_set(hw, SUPPORTS_TX_ENCAP_OFFLOAD);
Index: b/mt76_connac_mcu.c
===================================================================
--- a/mt76_connac_mcu.c
+++ b/mt76_connac_mcu.c
@@ -2686,9 +2686,8 @@ int mt76_connac_mcu_bss_basic_tlv(struct
 	case NL80211_IFTYPE_AP:
 		if (ieee80211_hw_check(phy->hw, SUPPORTS_MULTI_BSSID)) {
 			u8 bssid_id = vif->bss_conf.bssid_indicator;
-			struct wiphy *wiphy = phy->hw->wiphy;
 
-			if (bssid_id > ilog2(wiphy->mbssid_max_interfaces))
+			if (bssid_id > 4)
 				return -EINVAL;
 
 			bss->non_tx_bssid = vif->bss_conf.bssid_index;
Index: b/mt7915/main.c
===================================================================
--- a/mt7915/main.c
+++ b/mt7915/main.c
@@ -1468,7 +1468,6 @@ const struct ieee80211_ops mt7915_ops =
 #ifdef CONFIG_MAC80211_DEBUGFS
 	.sta_add_debugfs = mt7915_sta_add_debugfs,
 #endif
-	.set_radar_background = mt7915_set_radar_background,
 #ifdef CONFIG_NET_MEDIATEK_SOC_WED
 	.net_fill_forward_path = mt7915_net_fill_forward_path,
 #endif
Index: b/mt7915/mcu.c
===================================================================
--- a/mt7915/mcu.c
+++ b/mt7915/mcu.c
@@ -265,12 +265,7 @@ mt7915_mcu_rx_radar_detected(struct mt79
 	if ((r->band_idx && !dev->phy.band_idx) && dev->mt76.phys[MT_BAND1])
 		mphy = dev->mt76.phys[MT_BAND1];
 
-	if (r->band_idx == MT_RX_SEL2)
-		cfg80211_background_radar_event(mphy->hw->wiphy,
-						&dev->rdd2_chandef,
-						GFP_ATOMIC);
-	else
-		ieee80211_radar_detected(mphy->hw);
+	ieee80211_radar_detected(mphy->hw);
 	dev->hw_pattern++;
 }
 
@@ -1726,6 +1721,7 @@ mt7915_mcu_beacon_cntdwn(struct ieee8021
 	info->cnt = skb->data[offs->cntdwn_counter_offs[0]];
 }
 
+#if 0
 static void
 mt7915_mcu_beacon_mbss(struct sk_buff *rskb, struct sk_buff *skb,
 		       struct ieee80211_vif *vif, struct bss_info_bcn *bcn,
@@ -1781,6 +1777,8 @@ mt7915_mcu_beacon_mbss(struct sk_buff *r
 	}
 }
 
+#endif
+
 static void
 mt7915_mcu_beacon_cont(struct mt7915_dev *dev, struct ieee80211_vif *vif,
 		       struct sk_buff *rskb, struct sk_buff *skb,
@@ -2007,7 +2005,6 @@ int mt7915_mcu_add_beacon(struct ieee802
 	mt7915_mcu_beacon_check_caps(phy, vif, skb);
 
 	mt7915_mcu_beacon_cntdwn(vif, rskb, skb, bcn, &offs);
-	mt7915_mcu_beacon_mbss(rskb, skb, vif, bcn, &offs);
 	mt7915_mcu_beacon_cont(dev, vif, rskb, skb, bcn, &offs);
 	dev_kfree_skb(skb);
 
